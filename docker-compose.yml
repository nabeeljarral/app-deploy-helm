services:
    laravel.test:
        build:
            context: ./local-docker/sail-82
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                NODE_VERSION: '14'
                NPM_VERSION: '6.14.18'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - hermesnet_sail
        depends_on:
            - hermesnet_mysql
    hermesnet_redis:
        image: redis
        ports:
            - 6379:6379
        networks:
            - hermesnet_sail
        volumes:
            - 'hermesnet_redis:/data'
    hermesnet_mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'hermesnet_mysql:/var/lib/mysql'
        networks:
            - hermesnet_sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    hermesnet_postgres:
        image: 'postgres:13'
        ports:
            - '${DB2_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_PS_DATABASE}'
            POSTGRES_USER: '${DB_PS_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PS_PASSWORD}'
            POSTGRES_HOST_AUTH_METHOD: 'trust'
            PGDATA: '/data/postgres'
            PGHOST: '%'
        volumes:
            - 'hermesnet_postgres:/data/postgres'
        networks:
            - hermesnet_sail
#        healthcheck:
#            test: ["CMD-SHELL", "pg_isready -d ${DB2_DATABASE} -U ${DB2_USERNAME}"]
#            retries: 3
#            timeout: 5s
networks:
    hermesnet_sail:
        driver: bridge
volumes:
    hermesnet_mysql:
        driver: local
    hermesnet_postgres:
        driver: local
    hermesnet_redis:
        driver: local
